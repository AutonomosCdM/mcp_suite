# Options supported are:
# 1. OpenAI
# 2. Gemini 
# 3. Groq
PROVIDER=Gemini


# Base URL for the OpenAI instance (default is https://api.openai.com/v1)
# Only needed for OpenAI
BASE_URL=https://api.groq.com/openai/v1/

# API Keys
# OpenAI API key: https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
LLM_API_KEY=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


# For Gemini API key (only needed if PROVIDER=gemini)
GEMINI_API_KEY=AIzaSyCJJNSYXFcnM8oym23KeLS_L2AaIYgt5R0

# For Groq API key (only needed if PROVIDER=groq)
GROQ_API_KEY=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


# The LLM you want to use for the agents. Make sure this LLM supports tools!
# OpenAI example: gpt-4o-mini, gpt-4o
# Gemini example: gemini-2.0-flash
# Groq example: llama-3.3-70b-versatile
MODEL_CHOICE=gemini-2.0-flash

# MCP Server API Keys
# ==================

# Brave Search API Key
# Get your Brave API key by going to the following link after signing up for Brave:
# https://api.search.brave.com/app/keys
BRAVE_API_KEY=BSAh-wA7sPmQ1ZUaE14y1wCyP-skHiY

# Airtable API Key
# Get your API key from https://airtable.com/account
AIRTABLE_API_KEY=patPjgkhMiiSxtMzN.36c173009163f046477564a209c3f2073b712e58231876f541d49e27d63ddf41

# GitHub API Token
# Generate a personal access token at https://github.com/settings/tokens
GITHUB_TOKEN=YOUR_GITHUB_PAT_HERE


# Slack API Tokens
# Create a Slack app at https://api.slack.com/apps and obtain the tokens
# Even better, follow the 'Setup' instructions given in the Slack MCP server GitHub page:
# https://github.com/modelcontextprotocol/servers/tree/main/src/slack#setup
SLACK_BOT_TOKEN=xoxb-YOUR-SLACK-BOT-TOKEN-HERE
SLACK_TEAM_ID=T084BMT9H4N

# Firecrawl API Key
# Register for an API key at https://firecrawl.dev
FIRECRAWL_API_KEY=fc-bde4ee1bacd24a069df116e7351e1d51


# MCP Server Config
# ==================

# The folder you want exposed to the file system agent
LOCAL_FILE_DIR=/Users/autonomos_dev/Projects/play_sand

# Get your Supabase DATABASE_URL from the Database section of your Supabase project settings-
# https://supabase.com/dashboard/project/<your project ID>/settings/database
# Make sure you replace the [YOUR-PASSWORD] placeholder with your DB password you set when creating your account.
# Be sure ot use URL coding for your password (example, '@' is %40, '?' is %3F, etc.)
# You can reset this if needed on the same database settings page.
DATABASE_URL=postgresql://postgres:[miFeyFey2024]@db.ootmawvidabqnicmxknu.supabase.co:5432/postgres

# Supabase configuration for authentication
# Get these from your Supabase project settings -> API
# https://supabase.com/dashboard/project/<your project ID>/settings/api
SUPABASE_URL=https://ootmawvidabqnicmxknu.supabase.co
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9vdG1hd3ZpZGFicW5pY214a251Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQwNDI3MzUsImV4cCI6MjA1OTYxODczNX0.yjfu4k8ULMbQjZRNXiHUCyCbbeF56u-yU15n6ciJo-c

# Bearer token you define to secure your agent endpoint
API_BEARER_TOKEN=test_token
